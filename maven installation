sudo wget http://repos.fedorapeople.org/repos/dchen/apache-maven/epel-apache-maven.repo -O /etc/yum.repos.d/epel-apache-maven.repo
sudo sed -i s/\$releasever/6/g /etc/yum.repos.d/epel-apache-maven.repo
sudo yum install -y apache-maven
mvn --version

set path in .bashrc file (will be in your home ~)
export M2_HOME=/home/ec2-user/apache-maven-3.5.2
export PATH=$M2_HOME/bin:$PATH

java installation
sudo yum install java-1.8.0
sudo yum update
cd /usr/lib
cd jre

.bashrc
export JAVA_HOME=/usr/lib/jvm/jdk-version
export PATH=$JAVA_HOME/bin:$PATH



ssh keygeneration
to connect to nodes from master
key-gen
($ sudo passwd ec2-user
Changing password for user ec2-user.
New password:
Retype new password:) to change passwd of ec2-user
changing user permissions to run any command for password less authentication
we have to edit sudoers file is(/etc)
add your user in sudoers
(usrname) ALL ALL
and for password authentication
(user name) ALL NOPASSWD:ALL
                           you have to enable port 22 and publickey auth
                           for that we have to edit file(sshd_config) in
                           /etc/ssh/sshd_config
                           1. vi sshd_config
                           2. port 22(enable port 22/ uncommit)
                           3. pubkey authentication(uncommit)
                           4. password authentication yes(uncommit)
                           5. password authentication No(commit/ put #)
                           after the settings
                           sudo systemctl restarst sshd

etc/sudeors







Enter ls -al ~/.ssh to see if existing SSH keys are present:

$ ls -al ~/.ssh
# Lists the files in your .ssh directory, if they exist
Check the directory listing to see if you already have a public SSH key.

By default, the filenames of the public keys are one of the following:

id_dsa.pub
id_ecdsa.pub
id_ed25519.pub
id_rsa.pub
If you don't have an existing public and private key pair, or don't wish to use any that are available to connect to GitHub, then generate a new SSH key.
If you see an existing public and private key pair listed (for example id_rsa.pub and id_rsa) that you would like to use to connect to GitHub, you can add your SSH key to the ssh-agent.
Tip: If you receive an error that ~/.ssh doesn't exist, don't worry! We'll create it when we generate a new SSH key.
